package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"git.sr.ht/~mpldr/uniview/graph/model"
)

// PostEvent is the resolver for the postEvent field.
func (r *mutationResolver) PostEvent(ctx context.Context, event model.EventSubmission) (*bool, error) {
	panic(fmt.Errorf("not implemented: PostEvent - postEvent"))
}

// JoinRoom is the resolver for the joinRoom field.
func (r *subscriptionResolver) JoinRoom(ctx context.Context, room string) (<-chan *model.Event, error) {
	panic(fmt.Errorf("not implemented: JoinRoom - joinRoom"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Subscription returns SubscriptionResolver implementation.
func (r *Resolver) Subscription() SubscriptionResolver { return &subscriptionResolver{r} }

type mutationResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }
